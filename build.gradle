plugins {
	id 'java'
	id 'groovy'
	id 'org.springframework.boot' version '3.4.1-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.egraika.MyRetailRestful'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	// Application dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'
	implementation 'ch.qos.logback:logback-classic'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// Swagger dependencies
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// Test dependencies
	testImplementation 'org.apache.groovy:groovy:4.0.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:mongodb:1.19.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
	testImplementation 'org.wiremock.integrations:wiremock-spring-boot:3.4.0'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

sourceSets {
	integrationTest {
		groovy {
			srcDirs = ['src/test/groovy']
		}
		resources {
			srcDirs = ['src/test/resources']
		}
		compileClasspath += sourceSets.main.output + sourceSets.test.output
		runtimeClasspath += sourceSets.main.output + sourceSets.test.output
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	useJUnitPlatform()
	testLogging {
		events "started", "passed", "skipped", "failed"
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "started", "passed", "skipped", "failed"
	}
}